kind: Template
apiVersion: v1
message: |-
  The following service(s) have been created in your project: Rails, PostgreSQL.
metadata:
  name: rails
  annotations:
    description: An example Ruby 2.6 Rails application running on Alpine Linux with a PostgreSQL database. 
    iconClass: icon-rails
    openshift.io/display-name: Rails
    openshift.io/long-description: This template defines resources needed to develop an Alpine based Rails 6 setup running on Ruby 2.6 and Nginx. It also includes resources required to create a PostgreSQL instance.
    tags: quickstart,ruby,rails,shapeblock
    template.openshift.io/bindable: "false"
  labels:
    template: node
    from: shapeblock
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}
    labels:
      type: app
      stack: rails
  spec:
    replicas: 1
    selector:
      app: ${NAME}
    template:
      metadata:
        labels:
          app: ${NAME}
      spec:
        volumes:
        containers:
        - name: rails
          image: ' '
          env:
          - name: SECRET_KEY_BASE
            valueFrom:
              secretKeyRef:
                key: keybase
                name: ${NAME}-db-secret
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${NAME}-db-secret
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${NAME}-db-secret
          - name: POSTGRES_HOST
            value: ${NAME}-db
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DB
            value: ${POSTGRES_DB}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - rails
          from:
            kind: "ImageStreamTag"
            name: ${NAME}:latest
- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}
  spec:
    selector:
      app: ${NAME}
    ports:
      - name: http
        port: 3000
        protocol: TCP
- apiVersion: v1
  kind: Secret
  metadata:
    name: ${NAME}-db-secret
  stringData:
    database-user: ${POSTGRES_USER}
    database-password: ${POSTGRES_PASSWORD}
    keybase: ${SECRET_KEY_BASE}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}-db
    labels:
      type: service
  spec:
    replicas: 1
    selector:
      name: ${NAME}-db
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NAME}-db
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${NAME}-db-secret
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${NAME}-db-secret
          - name: POSTGRESQL_DATABASE
            value: ${POSTGRES_DB}
          image: ' '
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: ${DB_MEMORY_LIMIT}
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: ${NAME}-db-data
        volumes:
        - name: ${NAME}-db-data
          persistentVolumeClaim:
            claimName: ${NAME}-db
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:10
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}-db
    labels:
      type: service    
  spec:
    ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
    selector:
      name: ${NAME}-db
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-db
    labels:
      app: ${NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${DB_VOLUME_CAPACITY}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${NAME}
  spec:
    source:
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: rails:2.6
            namespace: openshift
        type: Source
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: ${NAME}
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  from: 'rails-[a-f0-9]{6}'
  generate: expression
- description: Maximum amount of memory the App container can use.
  displayName: Memory Limit
  name: APP_MEMORY_LIMIT
  required: true
  value: 512Mi
- description: Maximum amount of memory the Postgres container can use.
  displayName: Memory Limit (Postgres)
  name: DB_MEMORY_LIMIT
  required: true
  value: 1Gi
- description: Volume space available for DB data, e.g. 512Mi, 2Gi
  displayName: Volume Capacity
  name: DB_VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/badri/rails-okd-example.git
- description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
- description: The exposed hostname that will route to the LEMP service, if left
    blank a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- description: Github trigger secret.  A difficult to guess string encoded as part
    of the webhook URL.  Not encrypted.
  displayName: GitHub Webhook Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
- displayName: Database Name
  name: POSTGRES_DB
  required: true
  value: rails
- displayName: Database User
  name: POSTGRES_USER
  required: true
  value: rails
- displayName: Database Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: POSTGRES_PASSWORD
- description: Your secret key for verifying the integrity of signed cookies.
  displayName: Secret Key
  from: '[a-z0-9]{127}'
  generate: expression
  name: SECRET_KEY_BASE
